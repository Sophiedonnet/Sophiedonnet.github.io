data_foyer <- data3 %>% group_by(HouseholdID) %>% summarize_if(is.numeric,sum,na.rm = TRUE)
colSources <- which(grepl( "Sources" , names( data_foyer) ))
matSources <- as.matrix(data_foyer[,colSources])
rownames(matSources) <- data_foyer$HouseholdID
colnames(matSources) <- sapply(colnames(matSources),function(u){substr(u, 9, nchar(u))})
matSources <- matSources * (matSources>0)
plotOptions = list(legend=FALSE,rowNames = TRUE,colNames = TRUE)
plotMyMatrix(matSources,dimLabels = list(row = "Households", col = "Sources for Mil"),plotOptions = plotOptions)
matSources
matSources <- 1*  (matSources>0)
plotOptions = list(legend=FALSE,rowNames = TRUE,colNames = TRUE)
plotMyMatrix(matSources,dimLabels = list(row = "Households", col = "Sources for Mil"),plotOptions = plotOptions)
list_spe
sp <- 'Niebe'
data3 <-  data2  %>% filter(spp_french==sp)
data_foyer <- data3 %>% group_by(HouseholdID) %>% summarize_if(is.numeric,sum,na.rm = TRUE)
colSources <- which(grepl( "Sources" , names( data_foyer) ))
matSources <- as.matrix(data_foyer[,colSources])
rownames(matSources) <- data_foyer$HouseholdID
colnames(matSources) <- sapply(colnames(matSources),function(u){substr(u, 9, nchar(u))})
matSources <- 1*  (matSources>0)
plotOptions = list(legend=FALSE,rowNames = TRUE,colNames = TRUE)
plotMyMatrix(matSources,dimLabels = list(row = "Households", col = "Sources for Mil"),plotOptions = plotOptions)
plotMyMatrix(t(matSources),dimLabels = list(col = "Households", row = "Sources for Mil"),plotOptions = plotOptions)
plotMyMatrix(t(matSources),dimLabels = list(col = "Households", row = paste("Sources for", "sp",sep=' '),plotOptions = plotOptions)
plotMyMatrix(t(matSources),dimLabels = list(col = "Households", row = paste("Sources for", "sp",sep=' '),plotOptions = plotOptions)
)
plotMyMatrix(t(matSources),dimLabels = list(col = "Households", row = paste("Sources for", "sp",sep=' ')),plotOptions = plotOptions)
plotMyMatrix(t(matSources),dimLabels = list(col = "Households", row = paste("Sources for", sp,sep=' ')),plotOptions = plotOptions)
plotMyMatrix(t(matSources),dimLabels = list(col = "Households", row = paste("Sources for", sp,sep=' ')),plotOptions = plotOptions)
for (sp in list_spe){
data3 <-  data2  %>% filter(spp_french==sp)
data_foyer <- data3 %>% group_by(HouseholdID) %>% summarize_if(is.numeric,sum,na.rm = TRUE)
colSources <- which(grepl( "Sources" , names( data_foyer) ))
matSources <- as.matrix(data_foyer[,colSources])
rownames(matSources) <- data_foyer$HouseholdID
colnames(matSources) <- sapply(colnames(matSources),function(u){substr(u, 9, nchar(u))})
matSources <- 1*  (matSources>0)
plotOptions = list(legend=FALSE,rowNames = TRUE,colNames = TRUE)
plotMyMatrix(t(matSources),dimLabels = list(col = "Households", row = paste("Sources for", sp,sep=' ')),plotOptions = plotOptions)
}
title = TRUE
categories_sources = 'Categories_sources_level_1'
load(file = paste('data/tableau_',categories_sources,'.Rda',sep=''))
list_spe <- c('AllSpecies',levels(as.factor(data2$spp_french)))
sp <- 'Niebe'
for (sp in list_spe){
if (sp != 'AllSpecies'){data3 <-  data2  %>% filter(spp_french==sp)}else{data3 <- data2 }
data_foyer <- data3 %>% group_by(HouseholdID) %>% summarize_if(is.numeric,sum,na.rm = TRUE)
colSources <- which(grepl( "Sources" , names( data_foyer) ))
matSources <- as.matrix(data_foyer[,colSources])
rownames(matSources) <- data_foyer$HouseholdID
colnames(matSources) <- sapply(colnames(matSources),function(u){substr(u, 9, nchar(u))})
matSources <- 1*  (matSources>0)
plotOptions = list(legend=FALSE,rowNames = TRUE,colNames = TRUE)
plotMyMatrix(t(matSources),dimLabels = list(col = "Households", row = paste("Sources for", sp,sep=' ')),plotOptions = plotOptions)
}
sp
load(file = paste('data/tableau_',categories_sources,'.Rda',sep=''))
list_spe <- c('AllSpecies',levels(as.factor(data2$spp_french)))
sp
print(sp)
categories_sources = 'Categories_sources_level_1'
load(file = paste('data/tableau_',categories_sources,'.Rda',sep=''))
list_spe <- c('AllSpecies',levels(as.factor(data2$spp_french)))
for (sp in list_spe){
print(sp)
if (sp != 'AllSpecies'){data3 <-  data2  %>% filter(spp_french==sp)}else{data3 <- data2 }
data_foyer <- data3 %>% group_by(HouseholdID) %>% summarize_if(is.numeric,sum,na.rm = TRUE)
colSources <- which(grepl( "Sources" , names( data_foyer) ))
matSources <- as.matrix(data_foyer[,colSources])
rownames(matSources) <- data_foyer$HouseholdID
colnames(matSources) <- sapply(colnames(matSources),function(u){substr(u, 9, nchar(u))})
matSources <- 1*  (matSources>0)
plotOptions = list(legend=FALSE,rowNames = TRUE,colNames = TRUE)
plotMyMatrix(t(matSources),dimLabels = list(col = "Households", row = paste("Sources for", sp,sep=' ')),plotOptions = plotOptions)
}
pause(1)
for (sp in list_spe){
print(sp)
if (sp != 'AllSpecies'){data3 <-  data2  %>% filter(spp_french==sp)}else{data3 <- data2 }
data_foyer <- data3 %>% group_by(HouseholdID) %>% summarize_if(is.numeric,sum,na.rm = TRUE)
colSources <- which(grepl( "Sources" , names( data_foyer) ))
matSources <- as.matrix(data_foyer[,colSources])
rownames(matSources) <- data_foyer$HouseholdID
colnames(matSources) <- sapply(colnames(matSources),function(u){substr(u, 9, nchar(u))})
matSources <- 1*  (matSources>0)
plotOptions = list(legend=FALSE,rowNames = TRUE,colNames = TRUE)
plotMyMatrix(t(matSources),dimLabels = list(col = "Households", row = paste("Sources for", sp,sep=' ')),plotOptions = plotOptions)
pause(1)
}
if (sp != 'AllSpecies'){data3 <-  data2  %>% filter(spp_french==sp)}else{data3 <- data2 }
data_foyer <- data3 %>% group_by(HouseholdID) %>% summarize_if(is.numeric,sum,na.rm = TRUE)
colSources <- which(grepl( "Sources" , names( data_foyer) ))
matSources <- as.matrix(data_foyer[,colSources])
rownames(matSources) <- data_foyer$HouseholdID
colnames(matSources) <- sapply(colnames(matSources),function(u){substr(u, 9, nchar(u))})
matSources <- 1*  (matSources>0)
plotOptions = list(legend=FALSE,rowNames = TRUE,colNames = TRUE)
plotMyMatrix(t(matSources),dimLabels = list(col = "Households", row = paste("Sources for", sp,sep=' ')),plotOptions = plotOptions)
list_spe <- c(levels(as.factor(data2$spp_french)))
for (sp in list_spe){
print(sp)
if (sp != 'AllSpecies'){data3 <-  data2  %>% filter(spp_french==sp)}else{data3 <- data2 }
data_foyer <- data3 %>% group_by(HouseholdID) %>% summarize_if(is.numeric,sum,na.rm = TRUE)
colSources <- which(grepl( "Sources" , names( data_foyer) ))
matSources <- as.matrix(data_foyer[,colSources])
rownames(matSources) <- data_foyer$HouseholdID
colnames(matSources) <- sapply(colnames(matSources),function(u){substr(u, 9, nchar(u))})
matSources <- 1*  (matSources>0)
plotOptions = list(legend=FALSE,rowNames = TRUE,colNames = TRUE)
plotMyMatrix(t(matSources),dimLabels = list(col = "Households", row = paste("Sources for", sp,sep=' ')),plotOptions = plotOptions)
pause(1)
}
save(matSources, file=paste0('plots/Menages_Sources_bySpecies/matrix_Households_Sources_for_',sp,".Rda"))
save(matSources, file=paste0('plots/Menages_Sources_bySpecies/matrix_Menages_Sources_for_',sp,".Rda"))
#----------------- Packages nécessaires
library(tidyverse)
#------------- Options plots
categories_sources = 'Categories_sources_level_1'
load(file = paste('data/tableau_',categories_sources,'.Rda',sep=''))
list_spe <- c(levels(as.factor(data2$spp_french)))
for (sp in list_spe){
print(sp)
if (sp != 'AllSpecies'){data3 <-  data2  %>% filter(spp_french==sp)}else{data3 <- data2 }
data_foyer <- data3 %>% group_by(HouseholdID) %>% summarize_if(is.numeric,sum,na.rm = TRUE)
colSources <- which(grepl( "Sources" , names( data_foyer) ))
matSources <- as.matrix(data_foyer[,colSources])
rownames(matSources) <- data_foyer$HouseholdID
colnames(matSources) <- sapply(colnames(matSources),function(u){substr(u, 9, nchar(u))})
matSources <- 1*  (matSources>0)
plotOptions = list(legend=FALSE,rowNames = TRUE,colNames = TRUE)
save(matSources, file=paste0('plots/Menages_Sources_bySpecies/matrix_Menages_Sources_for_',sp,".Rda"))
plotMyMatrix(t(matSources),dimLabels = list(col = "Households", row = paste("Sources for", sp,sep=' ')),plotOptions = plotOptions)
ggsave(file=paste0('plots/Menages_Sources_bySpecies/Menages_Sources_for_',sp,".Rda"))
}
rm(list=ls())
#----------------------------------------------------
#----------------------------------------------------
if (Sys.info()[[4]] == "sophie-Latitude-5310"){
setwd("~/Dropbox/WORK_DROPBOX/RECHERCHE_en_cours/Vanesse_Christine/Programmes/")
}
#----------------- Packages nécessaires
library(tidyverse)
#------------- Options plots
categories_sources = 'Categories_sources_level_1'
load(file = paste('data/tableau_',categories_sources,'.Rda',sep=''))
list_spe <- c(levels(as.factor(data2$spp_french)))
for (sp in list_spe){
print(sp)
if (sp != 'AllSpecies'){data3 <-  data2  %>% filter(spp_french==sp)}else{data3 <- data2 }
data_foyer <- data3 %>% group_by(HouseholdID) %>% summarize_if(is.numeric,sum,na.rm = TRUE)
colSources <- which(grepl( "Sources" , names( data_foyer) ))
matSources <- as.matrix(data_foyer[,colSources])
rownames(matSources) <- data_foyer$HouseholdID
colnames(matSources) <- sapply(colnames(matSources),function(u){substr(u, 9, nchar(u))})
matSources <- 1*  (matSources>0)
plotOptions = list(legend=FALSE,rowNames = TRUE,colNames = TRUE)
save(matSources, file=paste0('plots/Menages_Sources_bySpecies/matrix_Menages_Sources_for_',sp,".Rda"))
plotMyMatrix(t(matSources),dimLabels = list(col = "Households", row = paste("Sources for", sp,sep=' ')),plotOptions = plotOptions)
ggsave(file=paste0('plots/Menages_Sources_bySpecies/Menages_Sources_for_',sp,".png"))
}
if (Sys.info()[[4]] == "sophie-Latitude-5310"){
setwd("~/Dropbox/WORK_DROPBOX/RECHERCHE_en_cours/Vanesse_Christine/Programmes/")
}
#----------------- Packages nécessaires
library(dplyr)
library(ggplot2)
library(tidyr)
library(fastDummies)
library(sbm)
# ---------------- Les données
data_NCP_seedVF <- read.csv("data/data_NCP_seedVF.csv", sep=";")
data1 <- data_NCP_seedVF
is.data.frame(data1)
names(data1)
#------------ replace 2 by  1
where <- c(which(grepl( "_m" , colnames(data1))),which(grepl( "_w" , colnames(data1))),which(colnames(data1) == 'unknown'))
for (l in where){
cl <- data1[,l]
cl[cl ==2]  = 1
data1[,l] <- cl
}
#create categories_sources 3
data1$Categories_sources_level_1
if (Sys.info()[[4]] == "sophie-Latitude-5310"){
setwd("~/Dropbox/WORK_DROPBOX/RECHERCHE_en_cours/Vanesse_Christine/Programmes/")
}
#----------------- Packages nécessaires
library(dplyr)
library(ggplot2)
library(tidyr)
library(fastDummies)
library(sbm)
# ---------------- Les données
data_NCP_seedVF <- read.csv("data/data_NCP_seedVF.csv", sep=";")
data1 <- data_NCP_seedVF
is.data.frame(data1)
names(data1)
#------------ replace 2 by  1
where <- c(which(grepl( "_m" , colnames(data1))),which(grepl( "_w" , colnames(data1))),which(colnames(data1) == 'unknown'))
for (l in where){
cl <- data1[,l]
cl[cl ==2]  = 1
data1[,l] <- cl
}
#create categories_sources 3
data1$Categories_sources_level_1
data1$Categories_sources_level_2
data1$Categories_sources_level_3 <- data1$Categories_sources_level_2
data1$Categories_sources_level_3[data1$Categories_sources_level_1=='Legacy'] = 'Legacy'
#----------------------- Hot coding for Sources
#categories_sources  = 'Categories_sources_level_2'
#categories_sources  = 'Categories_sources_level_1'
#categories_sources  = 'Categories_sources_level_3'
for (categories_sources in c('Categories_sources_level_2', 'Categories_sources_level_1','Categories_sources_level_3')){
data1_s <- data1;
Sources <- as.factor(data1[[which(names(data1_s) == categories_sources)]])
#levels(Sources) <- stringr::str_to_title(substring(levels(Sources), 1, 6))
data1_s$Sources <- Sources
data1_s <- dummy_cols(data1_s,select_columns = "Sources",remove_selected_columns = TRUE)
#---------------- Deal with double sources
data2 <- data1_s
wDS <- which(data1_s$doubleSource ==1)
col_to_concat <- which(grepl( "Sources" , names( data1_s ) ))
lines_to_rm  <- c()
for (i in wDS){
lines_i <- which(data1$key== data1_s$key[i])
lines_to_rm <- c(lines_to_rm,lines_i[-1])
data2[lines_i[1],col_to_concat] <- (colSums(data2[lines_i,col_to_concat]) >1 )*1
}
data2 <- data2[-lines_to_rm,]
data2 <- data2 %>% select(-c(doubleSource,key,seed_source,Categories_sources_level_1,Categories_sources_level_2, Categories_sources_level_3,seedlotID,spp_local))
save(data2, file=paste('data/tableau_',categories_sources,'_longSources.Rda',sep=''))
}
dim(data2)
names(data2)
load(file = paste('data/tableau_',categories_sources,'_longSources.Rda',sep=''))
list_spe <- c(levels(as.factor(data2$spp_french)))
for (sp in list_spe){
print(sp)
if (sp != 'AllSpecies'){data3 <-  data2  %>% filter(spp_french==sp)}else{data3 <- data2 }
data_foyer <- data3 %>% group_by(HouseholdID) %>% summarize_if(is.numeric,sum,na.rm = TRUE)
colSources <- which(grepl( "Sources" , names( data_foyer) ))
matSources <- as.matrix(data_foyer[,colSources])
rownames(matSources) <- data_foyer$HouseholdID
colnames(matSources) <- sapply(colnames(matSources),function(u){substr(u, 9, nchar(u))})
matSources <- 1*  (matSources>0)
plotOptions = list(legend=FALSE,rowNames = TRUE,colNames = TRUE)
save(matSources, file=paste0('plots/Menages_Sources_bySpecies/matrix_Menages_Sources_for_',sp,".Rda"))
plotMyMatrix(t(matSources),dimLabels = list(col = "Households", row = paste("Sources for", sp,sep=' ')),plotOptions = plotOptions)
ggsave(file=paste0('plots/Menages_Sources_bySpecies/Menages_Sources_for_',sp,".png"))
}
if (Sys.info()[[4]] == "sophie-Latitude-5310"){
setwd("~/Dropbox/WORK_DROPBOX/RECHERCHE_en_cours/Vanesse_Christine/Programmes/")
}
#----------------- Packages nécessaires
library(dplyr)
library(ggplot2)
library(tidyr)
library(fastDummies)
library(sbm)
# ---------------- Les données
data_NCP_seedVF <- read.csv("data/data_NCP_seedVF.csv", sep=";")
data1 <- data_NCP_seedVF
is.data.frame(data1)
names(data1)
#------------ replace 2 by  1
where <- c(which(grepl( "_m" , colnames(data1))),which(grepl( "_w" , colnames(data1))),which(colnames(data1) == 'unknown'))
for (l in where){
cl <- data1[,l]
cl[cl ==2]  = 1
data1[,l] <- cl
}
#create categories_sources 3
data1$Categories_sources_level_1
data1$Categories_sources_level_2
data1$Categories_sources_level_3 <- data1$Categories_sources_level_2
data1$Categories_sources_level_3[data1$Categories_sources_level_1=='Legacy'] = 'Legacy'
#----------------------- Hot coding for Sources
#categories_sources  = 'Categories_sources_level_2'
#categories_sources  = 'Categories_sources_level_1'
#categories_sources  = 'Categories_sources_level_3'
for (categories_sources in c('Categories_sources_level_2', 'Categories_sources_level_1','Categories_sources_level_3')){
data1_s <- data1;
Sources <- as.factor(data1[[which(names(data1_s) == categories_sources)]])
levels(Sources) <- stringr::str_to_title(substring(levels(Sources), 1, 6)) # comment this line if long sources
data1_s$Sources <- Sources
data1_s <- dummy_cols(data1_s,select_columns = "Sources",remove_selected_columns = TRUE)
#---------------- Deal with double sources
data2 <- data1_s
wDS <- which(data1_s$doubleSource ==1)
col_to_concat <- which(grepl( "Sources" , names( data1_s ) ))
lines_to_rm  <- c()
for (i in wDS){
lines_i <- which(data1$key== data1_s$key[i])
lines_to_rm <- c(lines_to_rm,lines_i[-1])
data2[lines_i[1],col_to_concat] <- (colSums(data2[lines_i,col_to_concat]) >1 )*1
}
data2 <- data2[-lines_to_rm,]
data2 <- data2 %>% select(-c(doubleSource,key,seed_source,Categories_sources_level_1,Categories_sources_level_2, Categories_sources_level_3,seedlotID,spp_local))
save(data2, file=paste('data/tableau_',categories_sources,'.Rda',sep=''))
#save(data2, file=paste('data/tableau_',categories_sources,'_longSources.Rda',sep=''))
}
dim(data2)
names(data2)
rm(list=ls())
#----------------------------------------------------
#----------------------------------------------------
if (Sys.info()[[4]] == "sophie-Latitude-5310"){
setwd("~/Dropbox/WORK_DROPBOX/RECHERCHE_en_cours/Vanesse_Christine/Programmes/")
}
#----------------- Packages nécessaires
library(tidyverse)
#------------- Options plots
categories_sources = 'Categories_sources_level_1'
load(file = paste('data/tableau_',categories_sources,'_longSources.Rda',sep=''))
list_spe <- c(levels(as.factor(data2$spp_french)))
for (sp in list_spe){
print(sp)
if (sp != 'AllSpecies'){data3 <-  data2  %>% filter(spp_french==sp)}else{data3 <- data2 }
data_foyer <- data3 %>% group_by(HouseholdID) %>% summarize_if(is.numeric,sum,na.rm = TRUE)
colSources <- which(grepl( "Sources" , names( data_foyer) ))
matSources <- as.matrix(data_foyer[,colSources])
rownames(matSources) <- data_foyer$HouseholdID
colnames(matSources) <- sapply(colnames(matSources),function(u){substr(u, 9, nchar(u))})
matSources <- 1*  (matSources>0)
plotOptions = list(legend=FALSE,rowNames = TRUE,colNames = TRUE)
save(matSources, file=paste0('plots/Menages_Sources_bySpecies/matrix_Menages_Sources_for_',sp,".Rda"))
pl <- plotMyMatrix(t(matSources),dimLabels = list(col = "Households", row = paste("Sources for", sp,sep=' ')),plotOptions = plotOptions)
pl
ggsave(file=paste0('plots/Menages_Sources_bySpecies/Menages_Sources_for_',sp,".png"))
}
rm(list=ls())
#----------------------------------------------------
#----------------------------------------------------
if (Sys.info()[[4]] == "sophie-Latitude-5310"){
setwd("~/Dropbox/WORK_DROPBOX/RECHERCHE_en_cours/Vanesse_Christine/Programmes/")
}
#----------------- Packages nécessaires
library(tidyverse)
#------------- Options plots
categories_sources = 'Categories_sources_level_1'
load(file = paste('data/tableau_',categories_sources,'.Rda',sep=''))
list_spe <- c(levels(as.factor(data2$spp_french)))
for (sp in list_spe){
print(sp)
if (sp != 'AllSpecies'){data3 <-  data2  %>% filter(spp_french==sp)}else{data3 <- data2 }
data_foyer <- data3 %>% group_by(HouseholdID) %>% summarize_if(is.numeric,sum,na.rm = TRUE)
colSources <- which(grepl( "Sources" , names( data_foyer) ))
matSources <- as.matrix(data_foyer[,colSources])
rownames(matSources) <- data_foyer$HouseholdID
colnames(matSources) <- sapply(colnames(matSources),function(u){substr(u, 9, nchar(u))})
matSources <- 1*  (matSources>0)
plotOptions = list(legend=FALSE,rowNames = TRUE,colNames = TRUE)
save(matSources, file=paste0('plots/Menages_Sources_bySpecies/matrix_Menages_Sources_for_',sp,".Rda"))
pl <- plotMyMatrix(t(matSources),dimLabels = list(col = "Households", row = paste("Sources for", sp,sep=' ')),plotOptions = plotOptions)
pl
ggsave(file=paste0('plots/Menages_Sources_bySpecies/Menages_Sources_for_',sp,".png"))
}
if (Sys.info()[[4]] == "sophie-Latitude-5310"){
setwd("~/Dropbox/WORK_DROPBOX/RECHERCHE_en_cours/Vanesse_Christine/Programmes/")
}
#----------------- Packages nécessaires
library(dplyr)
library(ggplot2)
library(tidyr)
library(fastDummies)
library(sbm)
# ---------------- Les données
data_NCP_seedVF <- read.csv("data/data_NCP_seedVF.csv", sep=";")
data1 <- data_NCP_seedVF
is.data.frame(data1)
names(data1)
#------------ replace 2 by  1
where <- c(which(grepl( "_m" , colnames(data1))),which(grepl( "_w" , colnames(data1))),which(colnames(data1) == 'unknown'))
for (l in where){
cl <- data1[,l]
cl[cl ==2]  = 1
data1[,l] <- cl
}
#create categories_sources 3
data1$Categories_sources_level_1
data1$Categories_sources_level_2
data1$Categories_sources_level_3 <- data1$Categories_sources_level_2
data1$Categories_sources_level_3[data1$Categories_sources_level_1=='Legacy'] = 'Legacy'
data1$Categories_sources_level_1
categories_sources = 'Categories_sources_level_1'
data1_s <- data1;
Sources <- as.factor(data1[[which(names(data1_s) == categories_sources)]])
Sources
data1_s$Sources <- Sources
data1_s <- dummy_cols(data1_s,select_columns = "Sources",remove_selected_columns = TRUE)
data1_s
#---------------- Deal with double sources
data2 <- data1_s
wDS <- which(data1_s$doubleSource ==1)
col_to_concat <- which(grepl( "Sources" , names( data1_s ) ))
lines_to_rm  <- c()
for (i in wDS){
lines_i <- which(data1$key== data1_s$key[i])
lines_to_rm <- c(lines_to_rm,lines_i[-1])
data2[lines_i[1],col_to_concat] <- (colSums(data2[lines_i,col_to_concat]) >1 )*1
}
data2 <- data2[-lines_to_rm,]
data2 <- data2 %>% select(-c(doubleSource,key,seed_source,Categories_sources_level_1,Categories_sources_level_2, Categories_sources_level_3,seedlotID,spp_local))
data2
save(data2, file=paste('data/tableau_',categories_sources,'_longSources.Rda',sep=''))
rm(list=ls())
#----------------------------------------------------
#----------------------------------------------------
if (Sys.info()[[4]] == "sophie-Latitude-5310"){
setwd("~/Dropbox/WORK_DROPBOX/RECHERCHE_en_cours/Vanesse_Christine/Programmes/")
}
#----------------- Packages nécessaires
library(tidyverse)
#------------- Options plots
categories_sources = 'Categories_sources_level_1'
load(file = paste('data/tableau_',categories_sources,'.Rda',sep=''))
list_spe <- c(levels(as.factor(data2$spp_french)))
print(sp)
sp= 'Niebe'
data_foyer <- data3 %>% group_by(HouseholdID) %>% summarize_if(is.numeric,sum,na.rm = TRUE)
colSources <- which(grepl( "Sources" , names( data_foyer) ))
colSources
data_foyer <- data3 %>% group_by(HouseholdID) %>% summarize_if(is.numeric,sum,na.rm = TRUE)
if (sp != 'AllSpecies'){data3 <-  data2  %>% filter(spp_french==sp)}else{data3 <- data2 }
data_foyer <- data3 %>% group_by(HouseholdID) %>% summarize_if(is.numeric,sum,na.rm = TRUE)
colSources <- which(grepl( "Sources" , names( data_foyer) ))
matSources <- as.matrix(data_foyer[,colSources])
rownames(matSources) <- data_foyer$HouseholdID
colnames(matSources) <- sapply(colnames(matSources),function(u){substr(u, 9, nchar(u))})
matSources
load(file = paste('data/tableau_',categories_sources,'longSources.Rda',sep=''))
load(file = paste('data/tableau_',categories_sources,'_longSources.Rda',sep=''))
list_spe <- c(levels(as.factor(data2$spp_french)))
print(sp)
if (sp != 'AllSpecies'){data3 <-  data2  %>% filter(spp_french==sp)}else{data3 <- data2 }
data_foyer <- data3 %>% group_by(HouseholdID) %>% summarize_if(is.numeric,sum,na.rm = TRUE)
colSources <- which(grepl( "Sources" , names( data_foyer) ))
matSources <- as.matrix(data_foyer[,colSources])
rownames(matSources) <- data_foyer$HouseholdID
matSources
colnames(matSources) <- sapply(colnames(matSources),function(u){substr(u, 9, nchar(u))})
matSources
matSources <- 1*  (matSources>0)
plotOptions = list(legend=FALSE,rowNames = TRUE,colNames = TRUE)
save(matSources, file=paste0('plots/Menages_Sources_bySpecies/matrix_Menages_Sources_for_',sp,".Rda"))
pl <- plotMyMatrix(t(matSources),dimLabels = list(col = "Households", row = paste("Sources for", sp,sep=' ')),plotOptions = plotOptions)
pl
ggsave(file=paste0('plots/Menages_Sources_bySpecies/Menages_Sources_for_',sp,".png"))
rm(list=ls())
#----------------------------------------------------
#----------------------------------------------------
if (Sys.info()[[4]] == "sophie-Latitude-5310"){
setwd("~/Dropbox/WORK_DROPBOX/RECHERCHE_en_cours/Vanesse_Christine/Programmes/")
}
#----------------- Packages nécessaires
library(tidyverse)
#------------- Options plots
categories_sources = 'Categories_sources_level_1'
load(file = paste('data/tableau_',categories_sources,'_longSources.Rda',sep=''))
list_spe <- c(levels(as.factor(data2$spp_french)))
for (sp in list_spe){
print(sp)
if (sp != 'AllSpecies'){data3 <-  data2  %>% filter(spp_french==sp)}else{data3 <- data2 }
data_foyer <- data3 %>% group_by(HouseholdID) %>% summarize_if(is.numeric,sum,na.rm = TRUE)
colSources <- which(grepl( "Sources" , names( data_foyer) ))
matSources <- as.matrix(data_foyer[,colSources])
rownames(matSources) <- data_foyer$HouseholdID
colnames(matSources) <- sapply(colnames(matSources),function(u){substr(u, 9, nchar(u))})
matSources <- 1*  (matSources>0)
plotOptions = list(legend=FALSE,rowNames = TRUE,colNames = TRUE)
save(matSources, file=paste0('plots/Menages_Sources_bySpecies/matrix_Menages_Sources_for_',sp,".Rda"))
pl <- plotMyMatrix(t(matSources),dimLabels = list(col = "Households", row = paste("Sources for", sp,sep=' ')),plotOptions = plotOptions)
pl
ggsave(file=paste0('plots/Menages_Sources_bySpecies/Menages_Sources_for_',sp,".png"))
}
help(plotMyMatrix)
rm(list=ls())
#----------------------------------------------------
#----------------------------------------------------
if (Sys.info()[[4]] == "sophie-Latitude-5310"){
setwd("~/Dropbox/WORK_DROPBOX/RECHERCHE_en_cours/Vanesse_Christine/Programmes/")
}
#----------------- Packages nécessaires
library(tidyverse)
#-------------  ROUGH MATRICES Households Sources by Species
categories_sources = 'Categories_sources_level_1'
load(file = paste('data/tableau_',categories_sources,'_longSources.Rda',sep=''))
list_spe <- c(levels(as.factor(data2$spp_french)))
for (sp in list_spe){
print(sp)
if (sp != 'AllSpecies'){data3 <-  data2  %>% filter(spp_french==sp)}else{data3 <- data2 }
data_foyer <- data3 %>% group_by(HouseholdID) %>% summarize_if(is.numeric,sum,na.rm = TRUE)
colSources <- which(grepl( "Sources" , names( data_foyer) ))
matSources <- as.matrix(data_foyer[,colSources])
rownames(matSources) <- data_foyer$HouseholdID
colnames(matSources) <- sapply(colnames(matSources),function(u){substr(u, 9, nchar(u))})
matSources <- 1*  (matSources>0)
plotOptions = list(legend=FALSE,rowNames = TRUE,colNames = TRUE)
save(matSources, file=paste0('plots/Menages_Sources_bySpecies/matrix_Menages_Sources_for_',sp,".Rda"))
pl <- plotMyMatrix(t(matSources),dimLabels = list(col = "Households", row = paste("Sources for", sp,sep=' ')),plotOptions = plotOptions)
pl
ggsave(file=paste0('plots/Menages_Sources_bySpecies/Menages_Sources_for_',sp,".png"))
}
30000*1.01^10
=======
install.packages("magik")
install.packages("magick")
setwd("~/WORK_ALL/ADMINISTRATIF/PAGE_WEB_PERSO/Sophiedonnet.github.io")
>>>>>>> Stashed changes
